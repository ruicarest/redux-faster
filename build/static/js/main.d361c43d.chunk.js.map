{"version":3,"sources":["reducers/todos.js","actions/index.js","reducers/visibilityFilter.js","reducers/index.js","components/Link.js","containers/FilterLink.js","components/Footer.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","components/App.js","index.js"],"names":["todos","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","id","text","completed","map","todo","objectSpread","nextTodoId","VisibilityFilters","visibilityFilter","filter","combineReducers","Link","_ref","active","children","onClick","react_default","a","createElement","disabled","style","marginLeft","connect","ownProps","dispatch","Footer","FilterLink","input","onSubmit","e","preventDefault","value","trim","ref","node","Todo","textDecoration","TodoList","toggleTodo","components_Todo","assign","key","getVisibleTodos","t","Error","App","containers_AddTodo","VisibleTodoList","components_Footer","store","createStore","rootReducer","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.d361c43d.chunk.js","sourcesContent":["const todos = (state = [], action) => {\r\n    switch (action.type) {\r\n      case 'ADD_TODO':\r\n        return [\r\n          ...state,\r\n          {\r\n            id: action.id,\r\n            text: action.text,\r\n            completed: false\r\n          }\r\n        ]\r\n      case 'TOGGLE_TODO':\r\n        return state.map(todo =>\r\n          todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n        )\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export default todos","let nextTodoId = 0\r\nexport const addTodo = text => ({\r\n  type: 'ADD_TODO',\r\n  id: nextTodoId++,\r\n  text\r\n})\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n  type: 'SET_VISIBILITY_FILTER',\r\n  filter\r\n})\r\n\r\nexport const toggleTodo = id => ({\r\n  type: 'TOGGLE_TODO',\r\n  id\r\n})\r\n\r\nexport const VisibilityFilters = {\r\n  SHOW_ALL: 'SHOW_ALL',\r\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}","import { VisibilityFilters } from '../actions'\r\n\r\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\r\n  switch (action.type) {\r\n    case 'SET_VISIBILITY_FILTER':\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default visibilityFilter","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\nimport visibilityFilter from './visibilityFilter'\r\n\r\nexport default combineReducers({\r\n  todos,\r\n  visibilityFilter\r\n})","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Link = ({ active, children, onClick }) => (\r\n  <button\r\n    onClick={onClick}\r\n    disabled={active}\r\n    style={{\r\n      marginLeft: '4px'\r\n    }}\r\n  >\r\n    {children}\r\n  </button>\r\n)\r\n\r\nLink.propTypes = {\r\n  active: PropTypes.bool.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Link","import { connect } from 'react-redux'\r\nimport { setVisibilityFilter } from '../actions'\r\nimport Link from '../components/Link'\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  active: ownProps.filter === state.visibilityFilter\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Link)","import React from 'react'\r\nimport FilterLink from '../containers/FilterLink'\r\nimport { VisibilityFilters } from '../actions'\r\n\r\nconst Footer = () => (\r\n  <div>\r\n    <span>Show: </span>\r\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\r\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\r\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\r\n  </div>\r\n)\r\n\r\nexport default Footer","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTodo } from '../actions'\r\n\r\nconst AddTodo = ({ dispatch }) => {\r\n  let input\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n          if (!input.value.trim()) {\r\n            return\r\n          }\r\n          dispatch(addTodo(input.value))\r\n          input.value = ''\r\n        }}\r\n      >\r\n        <input ref={node => (input = node)} />\r\n        <button type=\"submit\">Add Todo</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect()(AddTodo)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Todo = ({ onClick, completed, text }) => (\r\n  <li\r\n    onClick={onClick}\r\n    style={{\r\n      textDecoration: completed ? 'line-through' : 'none'\r\n    }}\r\n  >\r\n    {text}\r\n  </li>\r\n)\r\n\r\nTodo.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n  text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Todo","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = ({ todos, toggleTodo }) => (\r\n  <ul>\r\n    {todos.map(todo => (\r\n      <Todo key={todo.id} {...todo} onClick={() => toggleTodo(todo.id)} />\r\n    ))}\r\n  </ul>\r\n)\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      completed: PropTypes.bool.isRequired,\r\n      text: PropTypes.string.isRequired\r\n    }).isRequired\r\n  ).isRequired,\r\n  toggleTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList","import { connect } from 'react-redux'\r\nimport { toggleTodo } from '../actions'\r\nimport TodoList from '../components/TodoList'\r\nimport { VisibilityFilters } from '../actions'\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n  switch (filter) {\r\n    case VisibilityFilters.SHOW_ALL:\r\n      return todos\r\n    case VisibilityFilters.SHOW_COMPLETED:\r\n      return todos.filter(t => t.completed)\r\n    case VisibilityFilters.SHOW_ACTIVE:\r\n      return todos.filter(t => !t.completed)\r\n    default:\r\n      throw new Error('Unknown filter: ' + filter)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleTodo: id => dispatch(toggleTodo(id))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoList)","import React from 'react'\r\nimport Footer from './Footer'\r\nimport AddTodo from '../containers/AddTodo'\r\nimport VisibleTodoList from '../containers/VisibleTodoList'\r\n\r\nconst App = () => (\r\n  <div>\r\n    <AddTodo />\r\n    <VisibleTodoList />\r\n    <Footer />\r\n  </div>\r\n)\r\n\r\nexport default App","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport rootReducer from './reducers'\r\nimport App from './components/App'\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}